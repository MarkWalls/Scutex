//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaveTech.Scutex.TestHarness.WcfServices.ActivationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServices.ActivationService.IActivationService")]
    public interface IActivationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivationService/ActivateLicense", ReplyAction="http://tempuri.org/IActivationService/ActivateLicenseResponse")]
        string ActivateLicense(string licenseKey, string license, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActivationServiceChannel : WaveTech.Scutex.TestHarness.WcfServices.ActivationService.IActivationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivationServiceClient : System.ServiceModel.ClientBase<WaveTech.Scutex.TestHarness.WcfServices.ActivationService.IActivationService>, WaveTech.Scutex.TestHarness.WcfServices.ActivationService.IActivationService {
        
        public ActivationServiceClient() {
        }
        
        public ActivationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActivationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ActivateLicense(string licenseKey, string license, string token) {
            return base.Channel.ActivateLicense(licenseKey, license, token);
        }
    }
}
