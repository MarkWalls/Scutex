//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaveTech.Scutex.Providers.WebServicesProvider.WcfServices.StatusService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServices.StatusService.IStatusService")]
    public interface IStatusService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusService/GetServiceStatus", ReplyAction="http://tempuri.org/IStatusService/GetServiceStatusResponse")]
        string GetServiceStatus(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusService/InitializeService", ReplyAction="http://tempuri.org/IStatusService/InitializeServiceResponse")]
        string InitializeService(string token, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusService/SetupTestProduct", ReplyAction="http://tempuri.org/IStatusService/SetupTestProductResponse")]
        string SetupTestProduct(string token, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusService/CleanTestProductData", ReplyAction="http://tempuri.org/IStatusService/CleanTestProductDataResponse")]
        string CleanTestProductData(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusService/QueryActiveProductsAndLiceseSets", ReplyAction="http://tempuri.org/IStatusService/QueryActiveProductsAndLiceseSetsResponse")]
        string QueryActiveProductsAndLiceseSets(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatusServiceChannel : WaveTech.Scutex.Providers.WebServicesProvider.WcfServices.StatusService.IStatusService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatusServiceClient : System.ServiceModel.ClientBase<WaveTech.Scutex.Providers.WebServicesProvider.WcfServices.StatusService.IStatusService>, WaveTech.Scutex.Providers.WebServicesProvider.WcfServices.StatusService.IStatusService {
        
        public StatusServiceClient() {
        }
        
        public StatusServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatusServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetServiceStatus(string token) {
            return base.Channel.GetServiceStatus(token);
        }
        
        public string InitializeService(string token, string data) {
            return base.Channel.InitializeService(token, data);
        }
        
        public string SetupTestProduct(string token, string key) {
            return base.Channel.SetupTestProduct(token, key);
        }
        
        public string CleanTestProductData(string token) {
            return base.Channel.CleanTestProductData(token);
        }
        
        public string QueryActiveProductsAndLiceseSets(string token) {
            return base.Channel.QueryActiveProductsAndLiceseSets(token);
        }
    }
}
